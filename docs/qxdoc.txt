This text file is for documenting the the QX language.
Variables:
    There are three supported variable types:
    int - Integers, like 1 or -7
    str - Strings, like "Hello"
    bool - Boolean, i.e. TRUE or FALSE

    Variables are defined like this:
        [varType] [varName] = [value];
    Examples:
        int num = 1;
        str msg = "Monosodium Glutamate.";
        bool amICool = FALSE;

    Once defined, variables can be referenced by typing a '$' sign in
    front of it, like this:
        $[varName]

Functions:
    ARM:
        Does basic arithmetic on SrcA and SrcB and stores the result into Dest.
        Usage: 
            ARM([Operation], [Dest], [SrcA], [SrcB]);
            [Operation] The arithmetic operation to perform. 
            Supported operations include:
                ADD: Addition
                SUB: Substraction
                MUL: Multiplication
                DIV: Integer Division
            [Dest] The variable that will be store the result. If the variable has not been previously defined, 
            then behavior is undefined. 
            [SrcA] The first operand.
            [SrcB] The second operand.
        Alternate Usage:
            In addtion to the traditional syntax, the ARM function can be called
            like this:
            [Dest] = [SrcA] [Operation] [SrcB];
            Note that [Operation] uses the traditional symbols (i.e, +, -, *) 
            instead of the string constants like with standard usage.
        Example:
            ARM(ADD, $var, 2, 2); OR $var = 2 + 2;
            Will store the result of 2 + 2 in var. 
        

    JUMP:
        Jumps to the given label.
        Usage:
            JUMP([Label]);
            [Label] - The name of the given label. 
    JUMPIF:
        Jumps to the given label when the given condition is true.
        Usage:
            JUMPIF([Label], [Compare], [ValueA], [ValueB])
            [Label] - The name of label to jump to.
            [Compare] - The type of comparision to make.
            [Compare] can be the following values:
                EQ - Equal to
                LT - Less than
                GT - Greater than
                LE - Less than or equal to
                GE - Greater than or equal to
                NE - Not Equal to 
        Alternate Usage:
            JUMPIF([Label], [Comparision]);
            [Label] - The name of the label to jump to.
            [Comparision] - The comparision to check, written in the form:
                [ValueA] [ComparisionSymbol] [ValueB]
        Example:
            JUMPIF(END_GAME, LT, $A, $B); OR JUMPIF(END_GAME, $A < $B);
            Will jump to END_GAME if the value stored at A is less than the value stored in B. 

    END:
        Sets the 'END' flag to true.
        Usage:
            END();

    WAIT:
        Halts the program for a given number of cycles.
        Usage:
            WAIT([Cycles]);
            [Cycles] - The number of cycles to halt the program for. 

    NOP:
        No operation. 
        Usage:
            NOP();